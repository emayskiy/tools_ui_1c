Перем Типы;
Перем Токены;
Перем Исходник;
Перем ТаблицаТокенов;
Перем ТаблицаОшибок;
Перем ТаблицаЗамен;
Перем Стек;
Перем Счетчики;
Перем Директивы;
Перем Аннотации;
Перем СимволыПрепроцессора;

Перем Результат;
Перем ПрефиксПеременных;
Перем ЭтоМодульФормы;
// Перем КаталогИсходныхФайловРасширения;

Перем УстановилиОбъявлениеСпискаПеременных;

Процедура Открыть(Парсер, Параметры) Экспорт
	
	Типы = Парсер.Типы();
	Токены = Парсер.Токены();
	Исходник = Парсер.Исходник();
	ТаблицаТокенов = Парсер.ТаблицаТокенов();
	ТаблицаОшибок = Парсер.ТаблицаОшибок();
	ТаблицаЗамен = Парсер.ТаблицаЗамен();
	Стек = Парсер.Стек();
	Счетчики = Парсер.Счетчики();
	Директивы = Парсер.Директивы();
	Аннотации = Парсер.Аннотации();
	СимволыПрепроцессора = Парсер.СимволыПрепроцессора();
	
	Результат = Новый Массив;
	
	ЭтоМодульФормы = Параметры.ЭтоМодульФормы;
	ПрефиксПеременных = Параметры.ПрефиксПеременныхИПроцедур;
КонецПроцедуры

Функция Закрыть() Экспорт
	// ...
	Возврат СтрСоединить(Результат);
КонецФункции

Функция Подписки() Экспорт
	Перем Подписки;
	Подписки = Новый Массив;
	Подписки.Добавить("ПосетитьОбъявления");
	Подписки.Добавить("ПосетитьМодуль");
	Возврат Подписки;
КонецФункции

#Область РеализацияПодписок

Процедура ПосетитьОбъявлениеСпискаПеременныхМодуля(Объявление) Экспорт
	Если УстановилиОбъявлениеСпискаПеременных = Истина Тогда
		Возврат;
	КонецЕсли;
	УстановилиОбъявлениеСпискаПеременных=Истина;

	КодДляВставки = "
	// |&НаКлиенте
	// |Перем "+ПрефиксПеременных+"МестоположениеОбработки;
	|"+?(ЭтоМодульФормы,"&НаКлиенте","")+"
	|Перем "+ПрефиксПеременных+"КэшОбщихМодулей;
	|";
	
	ПозицияВставки = Объявление.Начало.Позиция;
	
	Если Объявление.Тип = Типы.ОбъявлениеСпискаПеременныхМодуля Тогда
		Если Объявление.Директивы.Количество() > 0 Тогда
			ПозицияВставки = Объявление.Директивы[0].Начало.Позиция;
		КонецЕсли;
	ИначеЕсли Объявление.Тип = Типы.ОбъявлениеМетода Тогда
		Если Объявление.Сигнатура.Директивы.Количество() > 0 Тогда
			ПозицияВставки = Объявление.Сигнатура.Директивы[0].Начало.Позиция;
		КонецЕсли;
	КонецЕсли;
	
	Вставка(КодДляВставки, ПозицияВставки);
КонецПроцедуры // ПосетитьОбъявлениеСпискаПеременныхМодуля()

Процедура ПосетитьОбъявления(Объявления) Экспорт
	ЕстьОбъявлениеПеременныхМодуля=Ложь;
	Для Каждого ТекОбъявление Из Объявления Цикл
		Если ТекОбъявление.Тип = Типы.ОбъявлениеСпискаПеременныхМодуля Тогда
			ПосетитьОбъявлениеСпискаПеременныхМодуля(ТекОбъявление);
			ЕстьОбъявлениеПеременныхМодуля=Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЕстьОбъявлениеПеременныхМодуля и Объявления.Количество()>0 Тогда
		ПосетитьОбъявлениеСпискаПеременныхМодуля(Объявления[0]);
	КонецЕсли;
КонецПроцедуры // ПосетитьОбъявления()

Функция ТекстОпределенияПеременныхОбщихМодулей()
	
	ТекстПроцедур = "";

	//Клиентские модули

	ИмяОбщейПроцедуры = ПрефиксПеременных+"ИнициализацияПеременныхОбщихМодулей";
	ТекстПроцедур = ТекстПроцедур+ "
	|
	|"+?(ЭтоМодульФормы,"&НаКлиенте","")+"
	|Процедура " + ИмяОбщейПроцедуры + "()
	|	"+ПрефиксПеременных+"КэшОбщихМодулей=Новый Соответствие;
	|
	|КонецПроцедуры
	|
	|"+?(ЭтоМодульФормы,"&НаКлиентеНаСервереБезКонтекста","")+"
	|Функция " + ПрефиксПеременных + "ОбщийМодульПоИмени(ИмяМодуля)";
	Если ЭтоМодульФормы Тогда
		ТекстПроцедур = ТекстПроцедур + " 
			|	#Если Клиент Тогда
			|
			|	ОбщийМодуль=ПолучитьФорму(""ВнешняяОбработка.""+ИмяМодуля+"".Форма"",,,Ложь);
			|	#Иначе
			|	ОбщийМодуль=ВнешниеОбработки.Создать(ИмяМодуля);
			|	#КонецЕсли";
	Иначе
		ТекстПроцедур = ТекстПроцедур + "
			| ОбщийМодуль=ВнешниеОбработки.Создать(ИмяМодуля);";
	КонецЕсли;
	ТекстПроцедур = ТекстПроцедур + "
		|
	|	Возврат ОбщийМодуль;
	|КонецФункции
	|
	|"+?(ЭтоМодульФормы,"&НаСервереБезКонтекста","")+"
	|Функция "+ПрефиксПеременных+"УИ_БиблиотекаКартинок()
	|	АдресБиблиотеки=УИ_ОбщегоНазначения.ХранилищеНастроекДанныхФормЗагрузить(УИ_ОбщегоНазначенияКлиентСервер.КлючОбъектаВХранилищеНастроек(), ""АдресЛокальнойБиблиотекиКартинок"", , ,
	|		ИмяПользователя());
	|
	|	Возврат ПолучитьИзВременногоХранилища(АдресБиблиотеки);
	|КонецФункции
	|
	|";
	
	Если ЭтоМодульФормы Тогда
		ТекстПроцедур = ТекстПроцедур + "
			|
			|&НаКлиенте
			|Функция "+ПрефиксПеременных+"УИ_ПараметрыПриложения()
			|Окна=ПолучитьОкна();
			|
			|Для Каждого ТекОкно ИЗ Окна Цикл
			|	Для Каждого Форма ИЗ ТекОкно.Содержимое Цикл
			|		Если ТипЗнч(Форма)<>Тип(""УправляемаяФорма"") Тогда
			|			Продолжить;
			|		КонецЕсли;
			|
			|		Если Форма.ИмяФормы=""ВнешняяОбработка.УИ_ПортативныеУниверсальныеИнструменты.Форма.Форма"" Тогда
			|			Возврат Форма.УИ_ПараметрыПриложения;
			|		КонецЕсли;
			|	КонецЦикла;
			|КонецЦикла;
			|
			|Возврат Новый Соответствие;
			|
			|КонецФункции
			|
			|#Если Клиент Тогда
			|	" + ИмяОбщейПроцедуры + "();
			|#КонецЕсли";
	Иначе
		ТекстПроцедур = ТекстПроцедур + "
			|	" + ИмяОбщейПроцедуры + "();
			|";
	КонецЕсли;
	ТекстПроцедур=Символы.ПС+ТекстПроцедур+Символы.ПС;
	Возврат ТекстПроцедур;
КонецФункции

Процедура ПосетитьМодуль(Модуль) Экспорт
	Если Модуль.Операторы.Количество() > 0 Тогда
		Вставка(ТекстОпределенияПеременныхОбщихМодулей(), Модуль.Операторы[0].Начало.Позиция);
	ИначеЕсли Модуль.Объявления.Количество() > 0 Тогда
		Вставка(ТекстОпределенияПеременныхОбщихМодулей(), Модуль.Объявления[Модуль.Объявления.Количество() - 1].Конец.Позиция + Модуль.Объявления[Модуль.Объявления.Количество() - 1].Конец.Длина);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

Процедура Ошибка(Текст, Начало, Конец = Неопределено, ЕстьЗамена = Ложь)
	Ошибка = ТаблицаОшибок.Добавить();
	Ошибка.Источник = "ДобавлениеВызововОбщихМодулей";
	Ошибка.Текст = Текст;
	Ошибка.ПозицияНачала = Начало.Позиция;
	Ошибка.НомерСтрокиНачала = Начало.НомерСтроки;
	Ошибка.НомерКолонкиНачала = Начало.НомерКолонки;
	Если Конец = Неопределено Или Конец = Начало Тогда
		Ошибка.ПозицияКонца = Начало.Позиция + Начало.Длина;
		Ошибка.НомерСтрокиКонца = Начало.НомерСтроки;
		Ошибка.НомерКолонкиКонца = Начало.НомерКолонки + Начало.Длина;
	Иначе
		Ошибка.ПозицияКонца = Конец.Позиция + Конец.Длина;
		Ошибка.НомерСтрокиКонца = Конец.НомерСтроки;
		Ошибка.НомерКолонкиКонца = Конец.НомерКолонки + Конец.Длина;
	КонецЕсли;
	Ошибка.ЕстьЗамена = ЕстьЗамена;
КонецПроцедуры

Процедура Замена(Текст, Начало, Конец = Неопределено)
	НоваяЗамена = ТаблицаЗамен.Добавить();
	НоваяЗамена.Источник = "ДобавлениеВызововОбщихМодулей";
	НоваяЗамена.Текст = Текст;
	НоваяЗамена.Позиция = Начало.Позиция;
	Если Конец = Неопределено Тогда
		НоваяЗамена.Длина = Начало.Длина;
	Иначе
		НоваяЗамена.Длина = Конец.Позиция + Конец.Длина - Начало.Позиция;
	КонецЕсли;
КонецПроцедуры

Процедура Вставка(Текст, Позиция)
	НоваяЗамена = ТаблицаЗамен.Добавить();
	НоваяЗамена.Источник = "ДобавлениеВызововОбщихМодулей";
	НоваяЗамена.Текст = Текст;
	НоваяЗамена.Позиция = Позиция;
	НоваяЗамена.Длина = 0;
КонецПроцедуры

УстановилиОбъявлениеСпискаПеременных=Ложь;