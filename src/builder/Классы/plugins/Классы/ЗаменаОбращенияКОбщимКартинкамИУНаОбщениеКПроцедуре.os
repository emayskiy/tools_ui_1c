// BSLLS-off

// Этот плагин выполняет переименование переменных если это возможно.
// При возникновении конфликтов регистрирует ошибку, которая указывает на конфликтную переменную.

// Пример ожидаемой структуры параметров (json):
// {"СтароеИмя1": "НовоеИмя1", "СтароеИмя2": "НовоеИмя2"}

Перем Токены;
Перем Типы;
Перем ТаблицаОшибок;
Перем ТаблицаЗамен;
Перем Директивы;

Перем Результат;

Перем ПрефиксПеременныхИПроцедур;
Перем МассивИменКартинок;

Процедура Открыть(Парсер, Параметры) Экспорт
	Типы = Парсер.Типы();
	ТаблицаОшибок = Парсер.ТаблицаОшибок();
	ТаблицаЗамен = Парсер.ТаблицаЗамен();
	Директивы = Парсер.Директивы();
	Токены = Парсер.Токены();
	
	Результат = Новый Массив;

	ПрефиксПеременныхИПроцедур=Параметры.ПрефиксПеременныхИПроцедур;

	МассивИменКартинок=Новый Массив;

	Для Каждого ТекКартинка Из Параметры.ОписаниеКонфигурации.ОбщиеКартинки Цикл
		МассивИменКартинок.Добавить(НРег(ТекКартинка.Имя));
	КонецЦикла;
КонецПроцедуры // Открыть()

Функция Закрыть() Экспорт
	Возврат СтрСоединить(Результат);
КонецФункции // Закрыть()

Функция Подписки() Экспорт
	Перем Подписки;
	Подписки = Новый Массив;
	Подписки.Добавить("ПосетитьВыражениеИдентификатор");
	// Подписки.Добавить("ПокинутьМодуль");
	Возврат Подписки;
КонецФункции // Подписки()

#Область РеализацияПодписок

Процедура ПосетитьВыражениеИдентификатор(Описание) Экспорт
	Если НРег(Описание.Голова.Имя)<>"библиотекакартинок" Тогда
		Возврат;
	КонецЕсли;

	ИмяКартинки=Неопределено;

	Если Описание.Хвост.Количество()=0 Тогда
		Возврат;
	КонецЕсли;

	Попытка
		ИмяКартинки=Описание.Хвост[0].Имя;
	Исключение
		Возврат;
	КонецПопытки;

	Если ИмяКартинки=Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если МассивИменКартинок.Найти(НРег(ИмяКартинки))=Неопределено Тогда
		Возврат;
	КонецЕсли;

	Замена(ПрефиксПеременныхИПроцедур+"УИ_БиблиотекаКартинок()",Описание.Начало, Описание.Начало);
	// Сообщить("аа");
КонецПроцедуры

#КонецОбласти // РеализацияПодписок

Процедура Ошибка(Текст, Начало, Конец = Неопределено, ЕстьЗамена = Ложь)
	Ошибка = ТаблицаОшибок.Добавить();
	Ошибка.Источник = "ЗаменаОбращенияКОбщимКартинкамИУНаОбщениеКПроцедуре";
	Ошибка.Текст = Текст;
	Ошибка.ПозицияНачала = Начало.Позиция;
	Ошибка.НомерСтрокиНачала = Начало.НомерСтроки;
	Ошибка.НомерКолонкиНачала = Начало.НомерКолонки;
	Если Конец = Неопределено Или Конец = Начало Тогда
		Ошибка.ПозицияКонца = Начало.Позиция + Начало.Длина;
		Ошибка.НомерСтрокиКонца = Начало.НомерСтроки;
		Ошибка.НомерКолонкиКонца = Начало.НомерКолонки + Начало.Длина;
	Иначе
		Ошибка.ПозицияКонца = Конец.Позиция + Конец.Длина;
		Ошибка.НомерСтрокиКонца = Конец.НомерСтроки;
		Ошибка.НомерКолонкиКонца = Конец.НомерКолонки + Конец.Длина;
	КонецЕсли;
	Ошибка.ЕстьЗамена = ЕстьЗамена;
КонецПроцедуры

Процедура Замена(Текст, Начало, Конец = Неопределено)
	НоваяЗамена = ТаблицаЗамен.Добавить();
	НоваяЗамена.Источник = "ЗаменаОбращенияКОбщимКартинкамИУНаОбщениеКПроцедуре";
	НоваяЗамена.Текст = Текст;
	НоваяЗамена.Позиция = Начало.Позиция;
	Если Конец = Неопределено Тогда
		НоваяЗамена.Длина = Начало.Длина;
	Иначе
		НоваяЗамена.Длина = Конец.Позиция + Конец.Длина - Начало.Позиция;
	КонецЕсли;
КонецПроцедуры

Процедура Вставка(Текст, Позиция)
	НоваяЗамена = ТаблицаЗамен.Добавить();
	НоваяЗамена.Источник = "ЗаменаОбращенияКОбщимКартинкамИУНаОбщениеКПроцедуре";
	НоваяЗамена.Текст = Текст;
	НоваяЗамена.Позиция = Позиция;
	НоваяЗамена.Длина = 0;
КонецПроцедуры